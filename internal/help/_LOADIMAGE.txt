{{DISPLAYTITLE:_LOADIMAGE}}
The [[_LOADIMAGE]] function loads an image into memory and returns valid [[LONG]] image handle values that are less than -1. 


{{PageSyntax}}
:{{Parameter|handle&amp;}} = [[_LOADIMAGE]]({{Parameter|filename$}}[, {{Parameter|mode%}}])


{{PageParameters}}
*{{Parameter|filename$}} is literal or variable [[STRING]] file name value.
*Optional {{Parameter|mode%}} [[INTEGER]] values can be:
**32 = 32-bit
**33 = hardware image


{{PageDescription}}
*Various common image file formats supported, like BMP, JPG, PNG, etc. A path can also be given.
*The {{Parameter|mode%}} can designate 32-bit color or 33 ('''version 1.000 and up'''). Omit to use the current graphic screen settings.
*Mode 33 images are '''hardware''' accelerated and are created using [[_LOADIMAGE]] or [[_COPYIMAGE]] ('''version 1.000 and up''').
*Loaded images can be read invisibly using [[POINT]]. Image coordinates start at 0 up to the [[_WIDTH (function)|_WIDTH]] - 1 and [[_HEIGHT]] - 1.
*Images can be made into a program [[SCREEN (statement)|SCREEN]] or page adopting the size and palette settings or placed using [[_PUTIMAGE]].
*Returns -1 as an invalid handle if it can't load the image. Valid [[LONG]] handle returns are less than -1 ({{Parameter|handle&amp;}} &lt; -1).
*Valid images only need to be loaded once. The handle can be used repeatedly until freed.
*'''Images are not deallocated when the [[SUB]] or [[FUNCTION]] they are created in ends. Free them with [[_FREEIMAGE]].'''


{{PageErrors}}
*Some picture file images may not load when a {{Parameter|mode%}} value is designated. Try loading it without a {{Parameter|mode%}} designation.
*'''It is important to free unused or discarded images with [[_FREEIMAGE]] to prevent CPU memory overflow errors.'''
*'''In text-only [[SCREEN]] 0, {{Parameter|mode%}} 32 must be specified.''' When loading an [[_ICON]] image use 32 for the {{Parameter|mode%}} too.


{{PageExamples}}
''Example 1:'' To display an image in 32-bit color using its resolution as a program screen:
{{CodeStart}} '' ''
i&amp; = {{Cl|_LOADIMAGE}}("mypic.jpg", 32)
{{Cl|SCREEN (statement)|SCREEN}} i&amp; '' ''
{{CodeEnd}}


''Example 2:'' [[DRAW]]ing and rotating an image 360 degrees using Turn Angle. [[POINT]] is used to read the invisible image source.
{{CodeStart}}
{{Cl|SCREEN (statement)|SCREEN}} {{Cl|_NEWIMAGE}}(800, 600, 32)
img&amp; = {{Cl|_LOADIMAGE}}("QB64.PNG")                           'load the image file to be drawn

wide% = {{Cl|_WIDTH (function)|_WIDTH}}(img&amp;): deep% = {{Cl|_HEIGHT}}(img&amp;)
TLC$ = "BL" + {{Cl|STR$}}(wide% \ 2) + "BU" + {{Cl|STR$}}(deep% \ 2)  'start draw at top left corner
RET$ = "BD BL" + {{Cl|STR$}}(wide%)                            'return to left side of image
{{Cl|_SOURCE}} img&amp;
{{Cl|_DEST}} 0
DO
  {{Cl|FOR...NEXT|FOR}} angle% = 0 {{Cl|TO}} 360 {{Cl|STEP}} 15
    {{Cl|CLS}}
    {{Cl|DRAW}} "BM400, 300" + "TA=" + {{Cl|VARPTR$}}(angle%) + TLC$
    {{Cl|FOR...NEXT|FOR}} y = 0 {{Cl|TO}} deep% - 1
      {{Cl|FOR...NEXT|FOR}} x = 0 {{Cl|TO}} wide% - 1
        {{Cl|DRAW}} "C" + {{Cl|STR$}}({{Cl|POINT}}(x, y)) + "R1"            'color and DRAW each pixel
      {{Cl|NEXT}}
      {{Cl|DRAW}} RET$
    {{Cl|NEXT}}
    {{Cl|_DISPLAY}}                         'NOTE: CPU usage will be HIGH!
  {{Cl|NEXT}}
{{Cl|LOOP}} {{Cl|UNTIL}} {{Cl|INKEY$}} > "" '' ''
{{CodeEnd}}
{{small|Code by Ted Weissgerber}}

:''NOTE:'' Speed varies with image size.


===More examples===

*[[SAVEIMAGE]] (QB64 Image to Bitmap SUB by Galleon)
*[[Program ScreenShots]] (Member-contributed program for legacy screen modes)
*[[ThirtyTwoBit SUB]] (QB64 Image area to bitmap)


{{PageSeeAlso}}
*[[_FREEIMAGE]], [[_ICON]]
*[[_PUTIMAGE]], [[_MAPTRIANGLE]]
*[[_NEWIMAGE]], [[_COPYIMAGE]]
*[[_PRINTIMAGE]] (printer)
*[[_PALETTECOLOR (function)]], [[_COPYPALETTE]], [[_ICON]]
*[[SCREEN (statement)]]
*[[Hardware images]]
*[[Bitmaps]], [[Icons and Cursors]], [[GIF Images]]


{{PageNavigation}}
