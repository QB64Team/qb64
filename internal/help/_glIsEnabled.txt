'''_glIsEnabled, glIsEnabledi:''' test whether a capability is enabled


{{PageSyntax}}

  FUNCTION _glIsEnabled~%% (BYVAL cap AS _UNSIGNED LONG)
  GLboolean '''_glIsEnabled'''(GLenum {{Parameter|cap}});

  GLboolean '''_glIsEnabledi'''(GLenum {{Parameter|cap}}, GLuint {{Parameter|index}});

; cap
: Specifies a symbolic constant indicating a GL capability.
; index
: Specifies the index of the capability.


{{PageDescription}}

'''_glIsEnabled''' returns {{KW|_GL_TRUE}} if {{Parameter|cap}} is an enabled capability and returns {{KW|_GL_FALSE}} otherwise. Boolean states that are indexed may be tested with '''_glIsEnabledi'''. For '''_glIsEnabledi''', {{Parameter|index}} specifies the index of the capability to test. {{Parameter|index}} must be between zero and the count of indexed capabilities for {{Parameter|cap}}. Initially all capabilities except {{KW|_GL_DITHER}} are disabled; {{KW|_GL_DITHER}} is initially enabled.

The following capabilities are accepted for {{Parameter|cap}}:



{|
|+
! '''Constant'''
! '''See'''
|+
| {{KW|_GL_BLEND}}
| {{KW|_glBlendFunc}}, {{KW|_glLogicOp}}
|+
| {{KW|_GL_CLIP_DISTANCE}}''i''
| {{KW|_glEnable}}
|+
| {{KW|_GL_COLOR_LOGIC_OP}}
| {{KW|_glLogicOp}}
|+
| {{KW|_GL_CULL_FACE}}
| {{KW|_glCullFace}}
|+
| {{KW|_GL_DEPTH_CLAMP}}
| {{KW|_glEnable}}
|+
| {{KW|_GL_DEBUG_OUTPUT}}
| {{KW|_glEnable}}
|+
| {{KW|_GL_DEBUG_OUTPUT_SYNCHRONOUS}}
| {{KW|_glEnable}}
|+
| {{KW|_GL_DEPTH_TEST}}
| {{KW|_glDepthFunc}}, {{KW|_glDepthRange}}
|+
| {{KW|_GL_DITHER}}
| {{KW|_glEnable}}
|+
| {{KW|_GL_FRAMEBUFFER_SRGB}}
| {{KW|_glEnable}}
|+
| {{KW|_GL_LINE_SMOOTH}}
| {{KW|_glLineWidth}}
|+
| {{KW|_GL_MULTISAMPLE}}
| {{KW|_glSampleCoverage}}
|+
| {{KW|_GL_POLYGON_SMOOTH}}
| {{KW|_glPolygonMode}}
|+
| {{KW|_GL_POLYGON_OFFSET_FILL}}
| {{KW|_glPolygonOffset}}
|+
| {{KW|_GL_POLYGON_OFFSET_LINE}}
| {{KW|_glPolygonOffset}}
|+
| {{KW|_GL_POLYGON_OFFSET_POINT}}
| {{KW|_glPolygonOffset}}
|+
| {{KW|_GL_PROGRAM_POINT_SIZE}}
| {{KW|_glEnable}}
|+
| {{KW|_GL_PRIMITIVE_RESTART}}
| {{KW|_glEnable}}, {{KW|_glPrimitiveRestartIndex}}
|+
| {{KW|_GL_SAMPLE_ALPHA_TO_COVERAGE}}
| {{KW|_glSampleCoverage}}
|+
| {{KW|_GL_SAMPLE_ALPHA_TO_ONE}}
| {{KW|_glSampleCoverage}}
|+
| {{KW|_GL_SAMPLE_COVERAGE}}
| {{KW|_glSampleCoverage}}
|+
| {{KW|_GL_SAMPLE_MASK}}
| {{KW|_glEnable}}
|+
| {{KW|_GL_SCISSOR_TEST}}
| {{KW|_glScissor}}
|+
| {{KW|_GL_STENCIL_TEST}}
| {{KW|_glStencilFunc}}, {{KW|_glStencilOp}}
|+
| {{KW|_GL_TEXTURE_CUBEMAP_SEAMLESS}}
| {{KW|_glEnable}}
|}




{{PageNotes}}

If an error is generated, '''_glIsEnabled''' and '''_glIsEnabledi''' return {{KW|_GL_FALSE}}.

{{KW|_GL_DEBUG_OUTPUT}} and {{KW|_GL_DEBUG_OUTPUT_SYNCHRONOUS}} are available only if the GL version is 4.3 or greater.


{{PageErrors}}

{{KW|_GL_INVALID_ENUM}} is generated if {{Parameter|cap}} is not an accepted value.

{{KW|_GL_INVALID_VALUE}} is generated by '''_glIsEnabledi''' if {{Parameter|index}} is outside the valid range for the indexed state {{Parameter|cap}}.


{{PageSeeAlso}}

[[_GL|SUB _GL]]
{{KW|_glEnable}}, {{KW|_glDisable}}, {{KW|_glGet}}


{{PageCopyright}}

Copyright 1991-2006 Silicon Graphics, Inc. Copyright 2010-2011 Khronos Group. This document is licensed under the SGI Free Software B License. For details, see [http://oss.sgi.com/projects/FreeB/ http://oss.sgi.com/projects/FreeB/].
